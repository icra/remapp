{"remainingRequest":"/home/zephol/Desktop/remapp/remapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zephol/Desktop/remapp/remapp/src/components/Menus.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/zephol/Desktop/remapp/remapp/src/components/Menus.vue","mtime":1596110681049},{"path":"/home/zephol/Desktop/remapp/remapp/node_modules/css-loader/dist/cjs.js","mtime":1596106215930},{"path":"/home/zephol/Desktop/remapp/remapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596106216266},{"path":"/home/zephol/Desktop/remapp/remapp/node_modules/postcss-loader/src/index.js","mtime":1596106216086},{"path":"/home/zephol/Desktop/remapp/remapp/node_modules/cache-loader/dist/cjs.js","mtime":1596106215902},{"path":"/home/zephol/Desktop/remapp/remapp/node_modules/vue-loader/lib/index.js","mtime":1596106216262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmEubmF2LWxpbmsgewogIGNvbG9yOiB2YXIoLS1saWdodC1ncmF5LXByaW1hcnkpOwogIGZvbnQtc2l6ZTogMThweDsKICBmb250LXdlaWdodDogdmFyKC0tYm9sZC10ZXh0KTsKfQphLm5hdi1saW5rOmhvdmVyIHsKICBjb2xvcjogd2hpdGU7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlnaHQtZ3JheS1wcmltYXJ5KSAhaW1wb3J0YW50OwogIGZvbnQtc2l6ZTogMThweDsKfQoubmF2LXRhYnMgLm5hdi1saW5rIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50OwogIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWxpZ2h0LWdyYXktcHJpbWFyeSkgIWltcG9ydGFudDsKICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7Cn0KLm5hdi10YWJzICNzb2x1dGlvbnNfX19CVl90YWJfYnV0dG9uX18ubmF2LWxpbmsuYWN0aXZlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ibHVlLXByaW1hcnkpICFpbXBvcnRhbnQ7CiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tYmx1ZS1wcmltYXJ5KSAhaW1wb3J0YW50OwogIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDsKICBjb2xvcjogd2hpdGU7CiAgZm9udC13ZWlnaHQ6IHZhcigtLWJvbGQtdGV4dCk7Cn0KLm5hdi10YWJzICNjYXNlU3R1ZGllc19fX0JWX3RhYl9idXR0b25fXy5uYXYtbGluay5hY3RpdmUgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyZWVuLXByaW1hcnkpICFpbXBvcnRhbnQ7CiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tZ3JlZW4tcHJpbWFyeSkgIWltcG9ydGFudDsKICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7CiAgY29sb3I6IHdoaXRlOwogIGZvbnQtd2VpZ2h0OiB2YXIoLS1ib2xkLXRleHQpOwp9Ci5uYXYtdGFicyAjZmFjdFNoZWV0c19fX0JWX3RhYl9idXR0b25fXy5uYXYtbGluay5hY3RpdmUgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXJlZC1wcmltYXJ5KSAhaW1wb3J0YW50OwogIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXJlZC1wcmltYXJ5KSAhaW1wb3J0YW50OwogIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDsKICBjb2xvcjogd2hpdGU7CiAgZm9udC13ZWlnaHQ6IHZhcigtLWJvbGQtdGV4dCk7Cn0KI19fQlZJRF9fNDhfX0JWX3RhYl9jb250YWluZXJfLnRhYi1jb250ZW50ICNzb2x1dGlvbnMgewogIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWJsdWUtcHJpbWFyeSkgIWltcG9ydGFudDsKfQojX19CVklEX180OF9fQlZfdGFiX2NvbnRhaW5lcl8udGFiLWNvbnRlbnQgI2Nhc2VTdHVkaWVzIHsKICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1ncmVlbi1wcmltYXJ5KSAhaW1wb3J0YW50Owp9CiNfX0JWSURfXzQ4X19CVl90YWJfY29udGFpbmVyXy50YWItY29udGVudCAjZmFjdFNoZWV0cyB7CiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tcmVkLXByaW1hcnkpICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["Menus.vue"],"names":[],"mappingswgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Menus.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n  div.remapToolbox\n    div.header\n      Header\n    div.content\n      b-container.p-2.mx-lg-5(fluid=\"true\")\n        b-row\n          <!--(style=\"background-color: var(--light-gray-primary)\")-->\n          b-col(sm=\"12\" md=\"4\" xl=\"3\")\n            //style=\"min-height: 90vh;  top:0; background-color: white\"\n            b-navbar.pt-0\n              .sidebar-header\n                b-row.mb-0.pb-0\n                  b-col\n                    h4(style=\"font-weight: var(--bold-text); text-align:left\") Survey\n                  b-col(cols=\"auto\" align-h=\"end\")\n                    b-button.clearButt(@click=\"clearValues\") CLEAR ALL\n                b-dropdown-divider(style=\"height: 0; margin: 0 0 0.75rem 0; overflow: hidden; border-top: 1px solid var(--light-gray-primary);\")\n                div(style=\"overflow-y: scroll; max-height: 70vh;\").pr-2\n                  template(v-for=\"q in questions\" :id=\"q.code\" style=\"overflow-y: auto\")\n                    b {{q.name}}\n                    multiselect(\n                      v-model=\"q.value\",\n                      :options=\"q.answers\",\n                      placeholder=\"Pick a value\",\n                      :disabled=\"is_disabled(q)\"\n                    ).multiselect\n                //b-button.clearButt.mt-3(block @click=\"clearValues\") CLEAR ALL\n          b-col\n            //router-view\n            <!--survey 1 outputs-->\n            div\n              b-tabs(content-class=\"\" fill)\n                b-tab#solutions(title=\"SOLUTIONS\" active).p-3.tabBox\n                  b Membrane reuse\n                  //div.membrane_reuse(:style=\"`background:${get_membrane_reuse_color()}`\")  {{show_membrane_reuse()}}\n                  div.membrane_reuse(v-for=\"s in get_available_solutions\" :id=\"s.code\" :key=\"s.code\" :style=\"`background:${s.color}`\")  {{ s.name }}\n                b-tab#caseStudies(title=\"CASE STUDIES\").p-3.tabBox\n                  CaseStudies\n                b-tab#factSheets(title=\"FACT SHEETS\").p-3.tabBox\n                  FactSheets\n    footer.footer\n      Footer\n\n\n</template>\n\n<script>\n  import Multiselect from 'vue-multiselect'\n  import CaseStudies from \"./CaseStudies\";\n  import FactSheets from \"./FactSheets\";\n  import Footer from \"./Footer\";\n  import Header from \"./Header\";\n  export default {\n    name: \"Menus\",\n    components: {\n      Header,\n      Footer,\n      FactSheets,\n      CaseStudies,\n      Multiselect\n    },\n    data() {\n      return {\n        questions: [\n          // Survey 1\n          {\n            code: \"T\",\n            name: \"Type of membrane\",\n            value: null,\n            answers: [\"Reverse osmosis brackish model design\", \"Reverse osmosis sea model design\", \"Nanofiltration\", \"Ultrafiltration\", \"Microfiltration\", \"Other\"]\n          },\n          {code: \"C\", name: \"Membrane configuration\", value: null, answers: [\"Spiral-wound\", \"Other\"]},\n          {code: \"S\", name: \"Membrane size\", value: null, answers: [\"Length: 1m. Diameter: 0.2m\", \"Other\"]},\n          {code: \"W\", name: \"Membrane weight\", value: null, answers: [\"<17kg\", \"17-25 kg\", \">25kg\", \"Don't know\"]},\n          {code: \"ED\", name: \"External damage\", value: null, answers: [\"No\", \"Yes\", \"Don't know\"]},\n          {code: \"F\", name: \"Fouling type\", value: null, answers: [\"Inorganic scaling\", \"Other\", \"Don't know\"]},\n          {\n            code: \"ST\",\n            name: \"Membrane storage\",\n            value: null,\n            answers: [\"Wet\", \"Immersed in a water solution\", \"Dry\", \"Don't know\"]\n          },\n          {code: \"D\", name: \"Storage duration\", value: null, answers: [\"<1 month\", \">1 month\", \"Don't know\"]},\n          {\n            code: \"RP\",\n            name: \"Cause of replacement\",\n            value: null,\n            answers: [\"Granted budget for replacement\", \"Operating more than the expected lifespan\", \"Lost of membrane integrity\", \"Don't know\"]\n          },\n          {\n            code: \"P\",\n            name: \"Membrane position\",\n            value: null,\n            answers: [\"Single pass\", \"Double pass - single stage\", \"Double pass - double stage\", \"Mix\", \"Don't know\"]\n          },\n          {\n            code: \"WT\",\n            name: \"Type of water\",\n            value: null,\n            answers: [\"Seawater\", \"Brackish water\", \"Wastewater\", \"Chemical industry\", \"Food industry\"]\n          },\n          // Survey 2\n          {\n            code: \"R\",\n            name: \"Rejection\",\n            value: null,\n            answers: [\"Lost of Rejection <15% comparing the design\", \">10% of NaCl and >30% of MgSO4\", \"<10% of NaCl and <30% of MgSO4\"]\n          },\n          {\n            code: \"PV\",\n            name: \"Variation of Permeability\",\n            value: null,\n            answers: [\"<1-fold comparing to the design value\", \"[1-5]-fold comparing to the design value\", \">5-fold comparing to the design value\"]\n          },\n        ],\n        membrane_reuse_options: [\n          // Survey 1\n          {code: \"LI\", name: \"Landfill disposal or incineration\", color: \"#be514e\"},\n          {code: \"IR\", name: \"Indirect recycling\", color: \"#604b79\"},\n          {\n            code: \"AM\",\n            name: \"Membranes are suitable for an alternative management to landfill disposal or incineration.\",\n            color: \"#9ab959\"\n          },\n          {\n            code: \"AMR\",\n            name: \"Membranes are suitable for an alternative management to landfill disposal or incineration. \" +\n              \"Membranes might need to be rehydrated using 50% w/w ethanol during 15 min.\",\n            color: \"#c2d59a\"\n          },\n          {\n            code: \"IC\", name: \"Intensive cleaning before considering an alternative management to landfill disposal \" +\n              \"or incineration\", color: \"#0cae51\"\n          },\n          {\n            code: \"NEIM\",\n            name: \"Not enough information. Potentially, membranes are suitable for alternative management.\",\n            color: \"#4dabc5\"\n          },\n          {\n            code: \"NEIC\",\n            name: \"Not enough information. Potentially, apply intensive cleaning before alternative management.\",\n            color: \"#35849b\"\n          },\n          {code: \"NEIR\", name: \"Not enough information. Potentially, indirect recycling.\", color: \"#ffff00\"},\n          {\n            code: \"IRC\", name: \"Indirect recycling of those membranes placed in the second stage. Potentially, \" +\n              \"apply intensive cleaning before considering an alternative management for those membranes \" +\n              \"placed in the first stage.\", color: \"#f79447\"\n          },\n          // Survey 2\n          {code: \"ReuRO\", name: \"Reuse as reverse osmosis membranes\", color: \"#00ff00\"},\n          {code: \"ReuNF\", name: \"Reuse as nanofiltration-like membranes\", color: \"#66ff66\"},\n          {code: \"RegRO\", name: \"Regenerate to reuse as reverse osmosis membranes\", color: \"#99ff33\"},\n          {code: \"RegNF\", name: \"Regenerate to reuse as nanofiltration membranes\", color: \"#ccff33\"},\n          {code: \"RecNF\", name: \"Recycling into nanofiltration-like membranes\", color: \"#33cc33\"},\n          {code: \"RecUF\", name: \"Recycling into ultrafiltration-like membranes\", color: \"#77933c\"},\n        ],\n        available_solutions: [\n          // Survey 1\n          {code: \"LI\", name: \"Landfill disposal or incineration\", color: \"#be514e\"},\n          {code: \"IR\", name: \"Indirect recycling\", color: \"#604b79\"},\n          {\n            code: \"AM\",\n            name: \"Membranes are suitable for an alternative management to landfill disposal or incineration.\",\n            color: \"#9ab959\"\n          },\n          {\n            code: \"AMR\",\n            name: \"Membranes are suitable for an alternative management to landfill disposal or incineration. \" +\n              \"Membranes might need to be rehydrated using 50% w/w ethanol during 15 min.\",\n            color: \"#c2d59a\"\n          },\n          {\n            code: \"IC\", name: \"Intensive cleaning before considering an alternative management to landfill disposal \" +\n              \"or incineration\", color: \"#0cae51\"\n          },\n          {\n            code: \"NEIM\",\n            name: \"Not enough information. Potentially, membranes are suitable for alternative management.\",\n            color: \"#4dabc5\"\n          },\n          {\n            code: \"NEIC\",\n            name: \"Not enough information. Potentially, apply intensive cleaning before alternative management.\",\n            color: \"#35849b\"\n          },\n          {code: \"NEIR\", name: \"Not enough information. Potentially, indirect recycling.\", color: \"#ffff00\"},\n          {\n            code: \"IRC\", name: \"Indirect recycling of those membranes placed in the second stage. Potentially, \" +\n              \"apply intensive cleaning before considering an alternative management for those membranes \" +\n              \"placed in the first stage.\", color: \"#f79447\"\n          },\n        ],\n      }\n    },\n    methods: {\n      get_question_by_code(code) {\n        return this.questions.find(q => q.code == code);\n      },\n      clearValues() {\n        this.questions.forEach(function (item) {\n          item.value = null;\n        });\n        console.log(\"all values cleared: \", this.questions);\n      },\n      //frontend\n      get_membrane_reuse_color() {\n        let code = this.get_membrane_reuse();\n        let reuse = this.membrane_reuse_options.find(o => o.code == code);\n        if (reuse) return reuse.color;\n        else return \"\";\n      },\n      get_membrane_reuse_option_by_code(code) {\n        if (code) {\n          let option = this.membrane_reuse_options.find(o => o.code == code);\n          return option.name;\n        }\n        return \"answer survey 1 to get a membrane reuse\";\n      },\n      show_membrane_reuse() {\n        let code = this.get_membrane_reuse();\n        return this.get_membrane_reuse_option_by_code(code);\n      },\n      is_rendered(question) {\n        let code = question.code;\n        if (code == \"WT\") {\n          if (this.get_question_by_code('F').value == \"Don't know\") return true;\n          return false;\n        }\n        return true;\n      },\n      is_disabled(question) {\n        let code = question.code;\n        if (code == \"PV\" || code == \"R\") {\n          if (this.available_solutions.find(s => s.code === \"LI\") || this.available_solutions.find(s => s.code === \"IR\")) {\n            return true;\n          }\n        }\n        return false;\n        /*let code = question.code;\n        let reuse_code = this.get_membrane_reuse();\n        if(code == \"PV\" || code == \"R\") {\n          if (reuse_code == \"LI\" || reuse_code == \"IR\") {\n            return true;\n          }\n        }\n        return false;*/\n      },\n      remove_solutions(codes){\n        for(let i=0; i<codes.length; i++){\n          console.log(\"deleting \"+codes[i]);\n          let index = this.available_solutions.findIndex(s=>s.code === codes[i]);\n          if(index >= 0){\n            this.available_solutions.splice(index, 1);\n          }\n        }\n      },\n      init_available_solutions(){\n        this.available_solutions=[\n          // Survey 1\n          {code:\"LI\", name:\"Landfill disposal or incineration\",                                                                 color:\"#be514e\"},\n          {code:\"IR\", name:\"Indirect recycling\",                                                                                color:\"#604b79\"},\n          {code:\"AM\", name:\"Membranes are suitable for an alternative management to landfill disposal or incineration.\",        color:\"#9ab959\"},\n          {code:\"AMR\", name:\"Membranes are suitable for an alternative management to landfill disposal or incineration. \" +\n              \"Membranes might need to be rehydrated using 50% w/w ethanol during 15 min.\",                                     color:\"#c2d59a\"},\n          {code:\"IC\", name:\"Intensive cleaning before considering an alternative management to landfill disposal \" +\n              \"or incineration\",                                                                                                color:\"#0cae51\"},\n          {code:\"NEIM\", name:\"Not enough information. Potentially, membranes are suitable for alternative management.\",         color:\"#4dabc5\"},\n          {code:\"NEIC\", name:\"Not enough information. Potentially, apply intensive cleaning before alternative management.\",    color:\"#35849b\"},\n          {code:\"NEIR\", name:\"Not enough information. Potentially, indirect recycling.\",                                        color:\"#ffff00\"},\n          {code:\"IRC\", name:\"Indirect recycling of those membranes placed in the second stage. Potentially, \" +\n              \"apply intensive cleaning before considering an alternative management for those membranes \" +\n              \"placed in the first stage.\",                                                                                     color:\"#f79447\"},\n        ]\n      },\n      get_membrane_reuse(){\n        this.init_available_solutions();\n        let get_question = this.get_question_by_code;\n        let type = get_question(\"T\").value;\n        let config = get_question(\"C\").value;\n        let size = get_question(\"S\").value;\n        let weight = get_question(\"W\").value;\n        let ext_damage = get_question(\"ED\").value;\n        let fouling = this.get_fouling_type();\n        let storage = get_question(\"ST\").value;\n        let storage_duration = get_question(\"D\").value;\n        let water_type = get_question(\"WT\").value;\n        let cause_replacement = get_question(\"RP\").value;\n        let position = get_question(\"P\").value;\n        let rejection = get_question(\"R\").value;\n        let permeability = get_question(\"PV\").value;\n        //Type of membrane\n        if(type == \"Other\"){\n          this.remove_solutions([\"IR\", \"AM\", \"AMR\", \"IC\", \"NEIM\", \"NEIC\", \"NEIR\", \"IRC\"]);\n          return;\n        }\n        else if(type == \"Ultrafiltration\"){\n          this.remove_solutions([\"IR\", \"AM\", \"AMR\", \"IC\", \"NEIM\", \"NEIC\", \"NEIR\", \"IRC\"]);\n          return;\n        }\n        else if(type == \"Microfiltration\"){\n          this.remove_solutions([\"IR\", \"AM\", \"AMR\", \"IC\", \"NEIM\", \"NEIC\", \"NEIR\", \"IRC\"]);\n          return;\n        }\n        else if(type == \"Reverse osmosis brackish model design\" || type == \"Reverse osmosis sea model design\" || type == \"Nanofiltration\"){\n          //Membrane configuration\n          if(config == \"Other\"){\n            this.remove_solutions([\"IR\", \"AM\", \"AMR\", \"IC\", \"NEIM\", \"NEIC\", \"NEIR\", \"IRC\"]);\n            return;\n          }\n          else if(config == \"Spiral-wound\"){\n            //Membrane size\n            if(size == \"Other\"){\n              this.remove_solutions([\"IR\", \"AM\", \"AMR\", \"IC\", \"NEIM\", \"NEIC\", \"NEIR\", \"IRC\"]);\n              return;\n            }\n            else if(size == \"Length: 1m. Diameter: 0.2m\"){\n              //Membrane weight\n              if(weight == \">25kg\"){\n                this.remove_solutions([\"IR\", \"AM\", \"AMR\", \"IC\", \"NEIM\", \"NEIC\", \"NEIR\", \"IRC\"]);\n                return;\n              }\n              else if(weight == \"<17kg\" || weight == \"17-25 kg\"){\n                this.remove_solutions([ \"LI\"]);\n                //External damage\n                if(ext_damage == \"Yes\"){\n                  this.remove_solutions([ \"AM\", \"AMR\", \"IC\", \"NEIM\", \"NEIC\", \"NEIR\", \"IRC\"]);\n                  return;\n                }else if (ext_damage == \"No\") {\n                  //Fouling\n                  if (fouling == \"Inorganic scaling\") {\n                    this.remove_solutions([\"AM\", \"AMR\", \"IRC\"]);\n                    //Membrane storage\n                    if (storage == \"Immersed in a water solution\" || storage == \"Wet\") {\n                      //Weight\n                      if (weight == \"17-25 kg\"){\n                        this.remove_solutions([\"IC\", \"NEIM\", \"NEIC\", \"NEIR\"]);\n                        return;\n                      }\n                      else if (weight == \"<17kg\"){\n                        this.remove_solutions([\"IR\", \"NEIM\", \"NEIC\", \"NEIR\"]);\n                        return;\n                      }\n                    } else if (storage == \"Dry\"){\n                      this.remove_solutions([\"IC\", \"NEIM\", \"NEIC\", \"NEIR\"]);\n                      return;\n                    }\n                  } else if (fouling == \"Other\") {\n                    //Membrane storage\n                    if (storage == \"Immersed in a water solution\" || storage == \"Wet\") {\n                      this.remove_solutions([\"IR\", \"AMR\", \"IRC\"]);\n                      //Weight\n                      if (weight == \"17-25 kg\"){\n                        this.remove_solutions([\"AM\", \"NEIM\", \"NEIC\", \"NEIR\"]);\n                        return;\n                      }\n                      else if (weight == \"<17kg\"){\n                        this.remove_solutions([\"IC\", \"NEIM\", \"NEIC\", \"NEIR\"]);\n                        return;\n                      }\n                    } else if (storage == \"Dry\") {\n                      //Duration of storage after the replacement\n                      this.remove_solutions([\"AM\"]);\n                      if (storage_duration == \"<1 month\") {\n                        this.remove_solutions([\"AMR\"]);\n                        //Weight\n                        if (weight == \"17-25 kg\") {\n                          if (position == \"Single pass\" || position == \"Double pass - single stage\") {\n                            //*1a\n                            this.remove_solutions([\"NEIM\", \"NEIC\", \"NEIR\", \"IRC\", \"IR\"]);\n                            return;\n                          } else if(position == \"Mix\" && cause_replacement == \"Granted budget for replacement\"){\n                            //*1b\n                            this.remove_solutions([\"NEIM\", \"NEIC\", \"NEIR\", \"IRC\", \"IR\"]);\n                            return;\n                          } else if (position == \"Mix\" && (cause_replacement == \"Operating more than the expected lifespan\" || cause_replacement == \"Lost of membrane integrity\")) {\n                            //*2\n                            this.remove_solutions([\"NEIM\", \"NEIC\", \"NEIR\", \"IC\", \"IR\"]);\n                            return;\n                          } else if (position == \"Double pass - double stage\") {\n                            //*3\n                            this.remove_solutions([\"NEIM\", \"NEIC\", \"NEIR\", \"IC\", \"IRC\"]);\n                            return;\n                          }\n                        } else if (weight == \"<17kg\"){\n                          this.remove_solutions([\"NEIM\", \"NEIC\", \"NEIR\", \"IRC\", \"IR\"]);\n                          return;\n                        }\n                      } else if (storage_duration == \">1 month\") {\n                        this.remove_solutions([\"IC\", \"AM\", \"IRC\"]);\n                        //Weight\n                        if (weight == \"17-25 kg\"){\n                          this.remove_solutions([\"NEIM\", \"NEIC\", \"NEIR\", \"AMR\"]);\n                          return;\n                        }\n                        else if (weight == \"<17kg\"){\n                          this.remove_solutions([\"NEIM\", \"NEIC\", \"NEIR\", \"IR\"]);\n                          return;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        //Complementary information to the decision-making tree\n        if((type == \"Reverse osmosis brackish model design\" || type == \"Reverse osmosis sea model design\" || type == \"Nanofiltration\") && config == \"Spiral-wound\" && size == \"Length: 1m. Diameter: 0.2m\") {\n          console.log(\"aaaa\");\n          console.log(cause_replacement);\n          console.log(position);\n          console.log(storage_duration);\n          console.log(ext_damage)\n          console.log(fouling);\n          if (weight == \"<17kg\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"Other\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIC\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n          else if(weight == \"17-25 kg\"){\n            if ((storage == \"Immersed in a water solution\" || storage == \"Wet\") && (ext_damage == \"No\" || ext_damage == \"Don't know\") && fouling == \"Don't know\") this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if ((position == \"Single pass\" || position == \"Double pass - single stage\") && storage == \"Dry\" && storage_duration == \"<1 month\" && ext_damage == \"Don't know\" && fouling == \"Don't know\") this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Granted budget for replacement\" && (position == \"Single pass\" || position == \"Double pass - single stage\" || position == \"Mix\") && storage == \"Dry\" && storage_duration == \"<1 month\" && ext_damage == \"Don't know\" && fouling == \"Don't know\") this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Operating more than the expected lifespan\" && position == \"Don't know\" && storage == \"Dry\" && storage_duration == \"<1 month\" && ext_damage == \"Don't know\" && fouling == \"Don't know\") this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Don't know\" && position == \"Don't know\" && storage == \"Dry\" && storage_duration == \"<1 month\" && ext_damage == \"Don't know\" && fouling == \"Don't know\") this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if ((position == \"Single pass\" || position == \"Double pass - single stage\") && storage == \"Don't know\" && storage_duration == \"<1 month\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Granted budget for replacement\" && storage == \"Don't know\" && storage_duration == \"<1 month\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if ((cause_replacement == \"Granted budget for replacement\" || cause_replacement == \"Operating more than the expected lifespan\") && position == \"Don't know\" && storage == \"Don't know\" && storage_duration == \"<1 month\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Lost of membrane integrity\" && (position == \"Single pass\" || position == \"Double pass - single stage\") && storage == \"Don't know\" && storage_duration == \"<1 month\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIR\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (storage == \"Don't know\" && storage_duration == \"Don't know\" && ext_damage == \"Don't know\" && fouling == \"Don't know\") this.remove_solutions([\"NEIM\", \"NEIC\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Operating more than the expected lifespan\" && (position == \"Double pass - double stage\" || position == \"Mix\") && storage == \"Don't know\" && storage_duration == \"<1 month\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIC\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Lost of membrane integrity\" && (position == \"Double pass - double stage\" || position == \"Mix\" || position == \"Don't know\") && storage == \"Don't know\" && storage_duration == \"<1 month\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIC\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if ((position == \"Double pass - double stage\" || position == \"Mix\" || position == \"Don't know\") && storage == \"Dry\" && storage_duration == \"Don't know\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIC\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Lost of membrane integrity\" && (position == \"Mix\" || position == \"Don't know\") &&  storage == \"Dry\" && storage_duration == \"<1 month\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIC\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (cause_replacement == \"Don't know\" && position == \"Mix\" && storage == \"Dry\" && storage_duration == \"<1 month\" && (ext_damage == \"No\" || ext_damage == \"Don't know\") && (fouling == \"No\" || fouling == \"Don't know\")) this.remove_solutions([\"NEIM\", \"NEIC\", \"IR\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (storage == \"Dry\" && storage_duration == \">1 month\") this.remove_solutions([\"NEIC\", \"NEIR\", \"NEIM\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n            else if (position == \"Double pass - double stage\" && storage == \"Dry\") this.remove_solutions([\"NEIC\", \"NEIR\", \"NEIM\", \"LI\", \"AM\", \"AMR\", \"IC\", \"IRC\"]);\n          }\n        }\n      },\n      get_management_survey2() {\n        let get_question = this.get_question_by_code;\n        let type = get_question(\"T\").value;\n        let rejection = get_question(\"R\").value;\n        let permeability = get_question(\"PV\").value;\n        // management according to survey_2\n        if (type == \"Reverse osmosis brackish model design\") {\n          if (permeability == \"<1-fold comparing to the design value\") {\n            if (rejection == \"Lost of Rejection <15% comparing the design\") return \"RegRO\"\n            else if (rejection == \">10% of NaCl and >30% of MgSO4\") return \"RecNF\"\n            else if (rejection == \"<10% of NaCl and <30% of MgSO4\") return \"RecUF\"\n          } else if (permeability == \"[1-5]-fold comparing to the design value\") {\n            if (rejection == \"Lost of Rejection <15% comparing the design\") return \"ReuRO\"\n            else if (rejection == \">10% of NaCl and >30% of MgSO4\") return \"ReuNF\"\n            else if (rejection == \"<10% of NaCl and <30% of MgSO4\") return \"RecUF\"\n          } else if (permeability == \">5-fold comparing to the design value\") {\n            if (rejection == \"Lost of Rejection <15% comparing the design\") return \"ReuRO\"\n            else if (rejection == \">10% of NaCl and >30% of MgSO4\") return \"ReuNF\"\n            else if (rejection == \"<10% of NaCl and <30% of MgSO4\") return \"RecUF\"\n          }\n        } else if (type == \"Reverse osmosis sea model design\") {\n          if (permeability == \"<1-fold comparing to the design value\") {\n            if (rejection == \"Lost of Rejection <15% comparing the design\") return \"RegRO\"\n            else if (rejection == \">10% of NaCl and >30% of MgSO4\") return \"RecNF\"\n            else if (rejection == \"<10% of NaCl and <30% of MgSO4\") return \"RecUF\"\n          } else if (permeability == \"[1-5]-fold comparing to the design value\") {\n            if (rejection == \"Lost of Rejection <15% comparing the design\") return \"ReuRO\"\n            else if (rejection == \">10% of NaCl and >30% of MgSO4\") return \"ReuNF\"\n            else if (rejection == \"<10% of NaCl and <30% of MgSO4\") return \"RecUF\"\n          } else if (permeability == \">5-fold comparing to the design value\") {\n            if (rejection == \">10% of NaCl and >30% of MgSO4\") return \"ReuNF\"\n          }\n        } else if (type == \"Nanofiltration\") {\n          if (permeability == \"<1-fold comparing to the design value\") {\n            if (rejection == \"Lost of Rejection <15% comparing the design\") return \"RegNF\"\n            else if (rejection == \">10% of NaCl and >30% of MgSO4\") return \"RecUF\"\n          } else if (permeability == \"[1-5]-fold comparing to the design value\") {\n            if (rejection == \">10% of NaCl and >30% of MgSO4\") return \"ReuNF\"\n            else if (rejection == \"<10% of NaCl and <30% of MgSO4\") return \"RecUF\"\n          } else if (permeability == \">5-fold comparing to the design value\") {\n            if (rejection == \"Lost of Rejection <15% comparing the design\") return \"ReuNF\"\n            else if (rejection == \"<10% of NaCl and <30% of MgSO4\") return \"RecUF\"\n          }\n        }\n      },\n      get_fouling_type(){\n        let get_question = this.get_question_by_code;\n        let fouling_value = get_question(\"F\").value;\n        let water_type = get_question(\"WT\").value;\n        let membrane_position = get_question(\"P\").value;\n        if(fouling_value == \"Don't know\") {\n          if (water_type == \"Seawater\" && !(membrane_position == \"Double pass - double stage\" || membrane_position == \"Mix\")) {\n            return \"Other\";\n          } else if (water_type == \"Seawater\" && (membrane_position == \"Double pass - double stage\" || membrane_position == \"Mix\")) {\n            return \"Inorganic scaling\";\n          } else if (water_type == \"Brackish water\" && !(membrane_position == \"Double pass - double stage\" || membrane_position == \"Mix\")) {\n            return \"Other\";\n          } else if (water_type == \"Brackish water\" && (membrane_position == \"Double pass - double stage\" || membrane_position == \"Mix\")) {\n            return \"Inorganic scaling\";\n          } else if (water_type == \"Wastewater\" || water_type == \"Food industry\") {\n            return \"Other\";\n          } else if (water_type == \"Chemical industry\") {\n            return \"Inorganic scaling\";\n          } else {\n            return fouling_value;\n          }\n        } else\n          return fouling_value;\n      },\n    },\n    computed: {\n      get_available_solutions: function () {\n        this.get_membrane_reuse();\n        return this.available_solutions;\n      }\n    }\n  }\n</script>\n\n\n<style>\n  a.nav-link {\n    color: var(--light-gray-primary);\n    font-size: 18px;\n    font-weight: var(--bold-text);\n  }\n  a.nav-link:hover {\n    color: white;\n    background-color: var(--light-gray-primary) !important;\n    font-size: 18px;\n  }\n  .nav-tabs .nav-link {\n    background-color: white !important;\n    border: 1px solid var(--light-gray-primary) !important;\n    border-radius: 0 !important;\n  }\n  .nav-tabs #solutions___BV_tab_button__.nav-link.active {\n    background-color: var(--blue-primary) !important;\n    border: 2px solid var(--blue-primary) !important;\n    border-radius: 0 !important;\n    color: white;\n    font-weight: var(--bold-text);\n  }\n  .nav-tabs #caseStudies___BV_tab_button__.nav-link.active {\n    background-color: var(--green-primary) !important;\n    border: 2px solid var(--green-primary) !important;\n    border-radius: 0 !important;\n    color: white;\n    font-weight: var(--bold-text);\n  }\n  .nav-tabs #factSheets___BV_tab_button__.nav-link.active {\n    background-color: var(--red-primary) !important;\n    border: 2px solid var(--red-primary) !important;\n    border-radius: 0 !important;\n    color: white;\n    font-weight: var(--bold-text);\n  }\n  #__BVID__48__BV_tab_container_.tab-content #solutions {\n    border: 2px solid var(--blue-primary) !important;\n  }\n  #__BVID__48__BV_tab_container_.tab-content #caseStudies {\n    border: 2px solid var(--green-primary) !important;\n  }\n  #__BVID__48__BV_tab_container_.tab-content #factSheets {\n    border: 2px solid var(--red-primary) !important;\n  }\n</style>\n\n<style scoped>\n  table {\n    border-collapse: collapse;\n  }\n  td, th {\n    padding: 0.2em;\n  }\n  .membrane_reuse {\n    padding: 1em;\n    font-size: large;\n    border: 1px solid #ccc;\n  }\n  .sidebar-header > a {\n    color: var(--green-primary);\n  }\n  .sidebar-header {\n    width: 100%;\n  }\n  .tabBox {\n    min-height: 70vh;\n  }\n  .remapToolbox {\n    position: relative;\n    min-height: 100vh;\n  }\n  .header {\n    width: 100%;\n    height: fit-content; /* Footer height */\n    background-color: var(--dark-gray-primary);\n  }\n  .content {\n    padding-bottom: 5rem; /* Footer height */\n    /*max-height: 60vh;*/\n  }\n  .footer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 4rem; /* Footer height */\n    background-color: var(--dark-gray-primary);\n  }\n  .multiselect{\n    margin-bottom: 0.75rem;\n    margin-top: 0.35rem;\n  }\n  .clearButt.btn-secondary  {\n    color: white;\n    background-color: var(--dark-gray-primary);\n    border-color: var(--dark-gray-primary);\n    font-weight: var(--bold-text);\n    font-size: small;\n    overflow: hidden;\n    min-width: fit-content;\n  }\n</style>"]}]}