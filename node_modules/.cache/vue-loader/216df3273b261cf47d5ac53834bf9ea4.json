{"remainingRequest":"/home/zephol/Desktop/remapp/remapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zephol/Desktop/remapp/remapp/src/components/CaseStudies.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zephol/Desktop/remapp/remapp/src/components/CaseStudies.vue","mtime":1596450380695},{"path":"/home/zephol/Desktop/remapp/remapp/node_modules/cache-loader/dist/cjs.js","mtime":1596106215902},{"path":"/home/zephol/Desktop/remapp/remapp/node_modules/vue-loader/lib/index.js","mtime":1596106216262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CaseStudies.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"CaseStudies.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n  .caseStudies\n    b-container(fluid=\"true\")\n      //p {{ solutionCode }}\n      b-row(v-for=\"c in get_cases_to_show\" :key=\"c\" )\n        b-col(lg=\"8\" sm=\"12\" xl=\"6\" )\n          b-img(:src=\"get_case_path({c})\" fluid style=\"max-width: 100%; max-height: 100%;\")\n        b-col(lg=\"8\" sm=\"12\" xl=\"6\" )\n          b-img(:src=\"get_case_path({c})\" fluid style=\"max-width: 100%; max-height: 100%;\")\n\n</template>\n\n<script>\n\n  import _ from 'lodash';\n\n  export default {\n    name: \"CaseStudies\",\n    props: ['solutionCode', 'typeMembrane', 'saltRejection', 'permeability'],\n    data: function () {\n      return {\n        mainPath: \"/caseStudies/\",\n        images: [\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Regenerate to reuse as reverse osmosis membranes\"\n              },\n            caseNumbers: [1, 2, 3, 4, 5, 6, 7]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Recycling into nanofiltration-like membranes\"\n              },\n            caseNumbers: [8, 9, 10, 11, 12, 13, 6, 14]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [15]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [16]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [17, 10, 18, 19, 9, 20, 21, 22, 6]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Reuse as reverse osmosis membranes\"\n              },\n            caseNumbers: [7, 23, 2, 3, 4, 24, 25]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Reuse as nanofiltration-like membranes\"\n              },\n            caseNumbers: [8, 26]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [15, 16, 17, 10, 18, 19, 9, 20, 21, 22, 6]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \">5-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Reuse as reverse osmosis membranes\"\n              },\n            caseNumbers: [23, 2, 3, 4, 24, 25]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \">5-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Reuse as nanofiltration-like membranes\"\n              },\n            caseNumbers: [8, 26]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis brackish model design\",\n                permeability: \">5-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [15, 16, 17, 10, 18, 19, 9, 20, 21, 22, 6]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Regenerate to reuse as reverse osmosis membranes\"\n              },\n            caseNumbers: [7, 1, 8, 2, 3, 4, 5, 6, 27]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Recycling into nanofiltration-like membranes\"\n              },\n            caseNumbers: [7, 28, 8, 9, 11, 12, 29, 13, 6, 14]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [15]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [16, 17, 18, 19, 9, 20, 21, 22, 6]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Reuse as reverse osmosis membranes\"\n              },\n            caseNumbers: [7, 23, 2, 3, 4, 8, 24, 25]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Reuse as nanofiltration-like membranes\"\n              },\n            caseNumbers: [8, 26]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [15, 16, 17, 18, 19, 15, 20, 21, 22, 6]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Reuse as reverse osmosis membranes\"\n              },\n            caseNumbers: [7, 23, 2, 3, 4, 8, 24, 25]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \">5-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Reuse as nanofiltration-like membranes\"\n              },\n            caseNumbers: [8, 26]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Reverse osmosis sea model design\",\n                permeability: \">5-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [15, 16, 17, 18, 19, 9, 20, 21, 22, 6]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Regenerate to reuse as Nanofiltration\"\n              },\n            caseNumbers: [2]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [30]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \"<1-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [30]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Reuse as nanofiltration-like membranes\"\n              },\n            caseNumbers: []\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Reuse as nanofiltration-like membranes\"\n              },\n            caseNumbers: []\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \"[1-5]-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [30]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \">5-fold comparing to the design value\",\n                saltRejection: \"<15% comparing to the design value\",\n                membraneReuse: \"Reuse as nanofiltration-like membranes\"\n              },\n            caseNumbers: []\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \">5-fold comparing to the design value\",\n                saltRejection: \">10% of NaCl and >30% of MgSO4\",\n                membraneReuse: \"Reuse as nanofiltration-like membranes\"\n              },\n            caseNumbers: []\n          },\n          {\n            inputs:\n              {\n                typeMembrane: \"Nanofiltration\",\n                permeability: \">5-fold comparing to the design value\",\n                saltRejection: \"<10% of NaCl and <30% of MgSO4\",\n                membraneReuse: \"Recycling into ultrafiltration-like membranes\"\n              },\n            caseNumbers: [30]\n          },\n          {\n            inputs:\n              {\n                typeMembrane: null,\n                permeability: null,\n                saltRejection: null,\n                membraneReuse: \"Indirect recycling\"\n              },\n            caseNumbers: [19,31,32,33,34,35,36,37,38,39]\n          },\n\n          // Survey 1\n          /*{code: \"LI\",    caseNumbers: []},\n          {code: \"IR\",    caseNumbers: [19,31,32,33,34,35,36,37,38,39]},\n          {code: \"AM\",    caseNumbers: [1,2,3]},\n          {code: \"AMR\",   caseNumbers: [1,2,3]},\n          {code: \"IC\",    caseNumbers: [1,2,3]},\n          {code: \"NEIM\",  caseNumbers: [1,2,3]},\n          {code: \"NEIC\",  caseNumbers: [1,2,3]},\n          {code: \"NEIR\",  caseNumbers: [1,2,3]},\n          {code: \"IRC\",   caseNumbers: [1,2,3]},\n\n          // Survey 2\n          {code: \"ReuRO\", caseNumbers: [1,2,3]},\n          {code: \"ReuNF\", caseNumbers: [1,2,3]},\n          {code: \"RegRO\", caseNumbers: [1,2,3]},\n          {code: \"RegNF\", caseNumbers: [1,2,3]},\n          {code: \"RecNF\", caseNumbers: [1,2,3]},\n          {code: \"RecUF\", caseNumbers: [1,2,3]},*/\n        ],\n      }\n    },\n    mounted: function(){\n    },\n    watch:{\n    },\n    methods: {\n      get_case_path(num){\n        let aux = JSON.stringify(num.c);\n        let path = this.mainPath + aux.toString() + \".JPG\";\n        return path;\n      },\n      is_equal(obj1, obj2){\n        const obj1_keys = Object.keys(obj1);\n        const obj2_keys = Object.keys(obj2);\n\n        if(obj1_keys.length !== obj2_keys.length)\n          return false;\n\n        for(let obj_key of obj1_keys){\n          if(obj1_keys[obj_key] !== obj2_keys[obj_key])\n            return false;\n        }\n        return true;\n      }\n    },\n    computed: {\n\n      get_cases_to_show() {\n        let caseNumbers = [];\n        console.log(\"caseNumbers ini: \", caseNumbers);\n\n        let membrane = this.typeMembrane;\n        let perm = this.permeability;\n        let rejection = this.saltRejection;\n        let imagesList = this.images;\n\n        this.solutionCode.forEach(function (sol) {\n          console.log(\"name: \", sol.name);\n          let auxObject = {\n            typeMembrane: membrane,\n            permeability: perm,\n            saltRejection: rejection,\n            membraneReuse: sol.name\n          };\n          let ret = imagesList.find(i => _.isEqual(i.inputs, auxObject));\n          console.log(\"ret: \", ret);\n          if(ret){\n            ret.caseNumbers.forEach(function (num) {\n              caseNumbers.push(num);\n            })\n          }\n        });\n        caseNumbers = [ ...new Set(caseNumbers) ]; //removes duplicate numbers.\n        console.log(\"caseNumbers: \", caseNumbers);\n        return caseNumbers;\n\n      },\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}